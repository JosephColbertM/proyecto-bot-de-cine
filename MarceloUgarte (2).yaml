openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Catolica9/Cine/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /producto/{productoId}:
    get:
      tags:
      - producto
      summary: Mostrar productos por id
      description: Retorna los datos de la orden( id - name - image precio)
      operationId: getproductoById
      parameters:
      - name: productoId
        in: path
        description: ID del producto
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/producto'
            application/json:
              schema:
                $ref: '#/components/schemas/producto'
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /compraProducto/{compraProductoId}:
    get:
      tags:
      - compraProducto
      summary: Mostrar producto por id para su respectiva compra
      description: Retorna los datos de la orden( id - idProducto - name - image - precio)
      operationId: getcompraProductoById
      parameters:
      - name: compraProductoId
        in: path
        description: ID del producto
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESSFUL OPERATION
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/compraProducto'
            application/json:
              schema:
                $ref: '#/components/schemas/compraProducto'
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /compraProducto:
    post:
      tags:
      - compraProducto
      summary: A単adir informacion para la compra del producto
      description: Permite brindar la informacion requerida para la compra de productos
      parameters:
      - name: compraProductoItem
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/compraProductoItem'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compraProducto'
        "404":
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "405":
          description: Entrada de datos invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /datosPagoProducto/{datosPagoId}:
    get:
      tags:
      - datosPago
      summary: Mostrar informacion de necesaria para seguir con la compra del producto
      description: Retorna los datos de la orden( id - idcompraProducto - idProducto - name - image - total)
      operationId: getdatosPagoById
      parameters:
      - name: datosPagoId
        in: path
        description: ID datosPago
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESSFUL OPERATION
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/datosPago'
            application/json:
              schema:
                $ref: '#/components/schemas/datosPago'
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /datosPago:
    post:
      tags:
      - datosPago
      summary: A単adir datos de pago
      description: Permite ingresar la informacion requerida para pagar los productos
      parameters:
      - name: datodPagoItem
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/datosPagoItem'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datosPago'
        "404":
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "405":
          description: Entrada de datos invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    error:
      type: object
      properties:
        errorCode:
          type: integer
          format: int64
        errorMessage:
          type: string
          description: Mensaje del error
        errorDescription:
          type: string
          description: La descripcion en detalle del error
    producto:
      type: object
      properties:
        id:
          type: integer
          description: Producto Id
          example: 2
        name:
          type: string
          description: Nombre del producto
          example: Pipocas
        image:
          type: string
          description: Imagen del producto
          example: https://es.web.img3.acsta.net/c_310_420/pictures/22/04/07/11/43/1839314.jpg
        precio:
          type: number
          description: Precio del producto
          example: 10.00
    compraProducto:
      type: object
      properties:
        id:
          type: integer
          description: Producto Id
          example: 7
        idProducto:
          type: integer
          description: Producto Id
          example: 2
        name:
          type: string
          description: Nombre del producto
          example: Pipocas
        image:
          type: string
          description: Imagen del producto
          example: https://es.web.img3.acsta.net/c_310_420/pictures/22/04/07/11/43/1839314.jpg
        precio:
          type: number
          description: Precio del producto
          example: 10.00
    compraProductoItem:
      type: object
      properties:
        id:
          type: integer
          description: Producto Id
          example: 2
        name:
          type: string
          description: Nombre del producto
          example: Pipocas
        image:
          type: string
          description: Imagen del producto
          example: https://es.web.img3.acsta.net/c_310_420/pictures/22/04/07/11/43/1839314.jpg
        tama単o:
          type: number
          description: Tama単o que se tendra del producto
          example: 2
        cantidad:
          type: number
          description: cantidad que se tendra del producto
          example: 2
    datosPago:
      type: object
      properties:
        id:
          type: integer
          description: Producto Id
          example: 2
        name:
          type: string
          description: Nombre del producto
          example: Pipocas
        image:
          type: string
          description: Imagen del producto
          example: https://es.web.img3.acsta.net/c_310_420/pictures/22/04/07/11/43/1839314.jpg
        cantidad:
          type: number
          description: cantidad que se tendra del producto
          example: 2
        precio:
          type: number
          description: precio del producto
          example: 10.00
    datosPagoItem:
      type: object
      properties:
        id:
          type: integer
          description: id del producto
          example: 54562
        payment:
          type: string
          description: Metodo de pago
          example: Visa
        card:
          type: integer
          description: Numero de la tarjeta
          example: 09293804928298
        lastDigits:
          type: integer
          description: Ingresar los 3 digitos detras de la tarjeta
          example: 298
        name:
          type: string
          description: Nombre para la factura
          example: Ugarte
        nit:
          type: integer
          description: nit para la factura
          example: 83468734
